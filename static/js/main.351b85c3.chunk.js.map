{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/choices.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","username","email","url","className","alt","src","href","CardList","courses","map","course","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","console","log","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","filteredCourses","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.351b85c3.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n \r\nconst Card = ({id, name, username, email, url}) => {\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt={`photo of ${name} chillin`} src={`https://robohash.org/${username}?200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <h3>{username}</h3>\r\n                <p>{email}</p>\r\n                <a href={url}> {name} link</a>\r\n                <p>study smoothie coming soon</p>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ( {courses}) => {\r\n    // when doing loops in React, remember to give it a unique key\r\n    return (\r\n        <div>\r\n        {/*     map is the loop */}\r\n            {courses.map((course, i) =>{\r\n        return  (\r\n            <Card \r\n                key={i} \r\n                id={courses[i].id} \r\n                name={courses[i].name} \r\n                email={courses[i].email} \r\n                username={courses[i].username}\r\n                url={courses[i].url}\r\n            />\r\n        );\r\n    })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n            className='tc pa3 ba b--green bg-lightest-blue'\r\n            type='search' \r\n            placeholder='search course name'\r\n            onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","export const courses = [\n  {\n    id: 0,\n    name: 'ARTE 101',\n    username: 'JLU2021',\n    email: 'getthat@cornout.myface',\n    url: `http://catalog.illinois.edu/courses-of-instruction/arte/`\n  },\n  {\n    id: 1,\n    name: 'ZTM WebDev',\n    username: 'Andre2021',\n    email: 'lookatthat@isntthat.cool',\n    url: `https://academy.zerotomastery.io/p/complete-web-developer-zero-to-mastery`\n  },\n  {\n    id: 2,\n    name: 'Crash Course',\n    username: 'Carrie_Anne',\n    email: 'CarryOn@AnotherLevelofAbstraction.org',\n    url: `https://www.youtube.com/playlist?list=PLME-KWdxI8dcaHSzzRsNuOLXtM2Ep_C7a`\n  },\n  {\n    id: 3,\n    name: 'kurzgesagt',\n    username: 'BeautifulScience',\n    email: 'doyoubelieve@greatfilter.org',\n    url: `https://kurzgesagt.org/youtube/`\n  },\n  {\n    id: 4,\n    name: 'Learning 2 Learn',\n    username: 'Chunka4restin2leaving',\n    email: 'nowutukno@here.now',\n    url: 'https://www.youtube.com/watch?v=vd2dtkMINIw'\n  }\n];","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    console.log(props)\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Scroll","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    // relatively new React update lets you \"catch\" errors, thereby triggering that lifecycle and allowing this standard component. \r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true})\r\n    }\r\n\r\n    render(){\r\n        if (this.state.hasError) {\r\n            return <h1>000oops, not good error</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport { courses } from '../components/choices';\r\nimport './App.css'\r\nimport Scroll from '../components/Scroll'\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n\r\n// need to add in state 'an obj that describes app'\r\n// parents feed state into property\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            courses: courses,\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     fetch('https://jsonplaceholder.typicode.com/users')\r\n    //         .then(response=> response.json())\r\n    //         // will display loading until this completes?\r\n    //         .then(users=> this.setState({ courses: users}));\r\n    // }\r\n\r\n    onSearchChange = (event) => {\r\n        // anytime you want to change state, do this, set the state to the event/changing variable\r\n        this.setState({ searchfield: event.target.value })\r\n    }\r\n\r\n    render(){// run the \"filter\" creates a new array with all elements that pass the test implemented by the provided function.\r\n        // destructure to clean up all that this.state\r\n        const { courses, searchfield} = this.state;\r\n        const filteredCourses = courses.filter(course => {\r\n            // return the value of the checked if course name includes the text in the searchfield\r\n            return course.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        });\r\n        // 0 = false ! = isn't \r\n    return !courses.length ?\r\n            <h1 className='tr'>Louding...</h1> :\r\n            (\r\n                <div className='tc'>\r\n                    <h1 className='f1'>Study buddIes</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <CardList courses={filteredCourses}/>\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\n// this lets style some easy such as tc text center \nimport 'tachyons'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}